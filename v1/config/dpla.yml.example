repository:

  ####################
  # * If you are just running CouchDB with no BigCouch cluster *
  # cluster_host: not needed at all
  # node_host: your couchdb server and its default port (or whatever port
  # your couchdb is running on.)
  ####################
  node_host: couchdb-node:5984

  ####################
  # * If you are running a BigCouch cluster *
  # cluster_host: your bigcouch cluster host, most likely with the default
  # couchdb post number 5984.
  # node_host: your couchdb hosts inside the cluster BUT not on the the default
  # couchdb port. By default,  # BigCouch will have that couchdb instances listening 
  # on port 5986. It really does not matter which one because BigCouch will replicate
  # the small admin changes we make on that one host anyways.
  ####################
  #cluster_host: bigcouch-host:5984
  #node_host: couchdb-node:5986

  # admin must be a server-admin (in CouchDB parlance) as configured in your
  # CouchDB or BigCouch config file
  admin:
    user: server-admin-username
    pass: their-password

  # reader will be a database member (in CouchDB parlance) that can be created
  # with (with only read permissions) by a rake task. 
  reader:
    user: non-admin-reader-username
    pass: their-password

search:
  # ElasticSearch host and port
  endpoint: 127.0.0.1:9200

  # Name of the alias pointing to your deployed ElasticSearch index
  index_name: dpla_alias
  
api_auth:
  # You're probably going to want to run with the following options commented out.
  # By default, the API requires a valid API key, which is definitely the way you'll
  # want to run it unless you have an excellent reason. (API keys help guard against
  # accidental DDOS attacks by wonky client apps.)

  # Set to true to accept *any* api_key param value as long as it is not blank
  # allow_all_keys: false

  # Set to true to *not* require an api_key param at all. This overrides allow_all_keys and
  # makes the API completely open. This is not recommended for actual production use.
  # skip_key_auth_completely: false

# Defaults to cache_results: false (which actually uses null_store behind the scenes)
# Supported values for 'cache_results': true, false
# Supported values for 'store': null_store, file_store, dalli_store
caching:
  cache_results: false
#  store: dalli_store
#  memcached_servers:
#    - memcache-node1
#    - memcache-node2

field_boosts:
  item:
    # boosted
    sourceResource.title: 2
    sourceResource.description: 0.75
    # not boosted: must be here to be included in the fields that are searched
    sourceResource.subject: 1
    sourceResource.collection.title: 1
    sourceResource.collection.description: 1
    sourceResource.contributor: 1
    sourceResource.creator: 1
    sourceResource.extent: 1
    sourceResource.format: 1
    sourceResource.genre: 1
    sourceResource.language.name: 1
    sourceResource.publisher: 1
    sourceResource.relation: 1
    sourceResource.spatial.name: 1
    sourceResource.specType: 1
    sourceResource.subject.name: 1
    sourceResource.type: 1
    dataProvider: 1
    intermediateProvider: 1
    provider.name: 1
  collection:
    title: 1

google_analytics:
  tid: UA-XXXX-Y

        
